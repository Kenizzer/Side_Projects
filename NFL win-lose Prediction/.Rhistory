ggplot(Scores, aes(x = rushing_attempts_yards, y = Home_win , fill = Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000)
attempts_away
ggplot(Scores, aes(x = rushing_attempts_away, y = Home_win , fill = Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000)
ggplot(Scores,aes(x=rushing_attempts_away, fill=Home_win)) + geom_density(alpha=0.25)
ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000)
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000)
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000, point_interval = mode_hdci, layout = "weave")
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000, point_interval = "mode_hdci", layout = "weave")
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 1000, point_interval = "mode_hdci")
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
ggarrange(a,b)
ggarrange(a,b, common.legend = TRUE)
# ggdist
ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
ggarrange(a,b,c,d, nrow = 2, ncol = 2)
ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv')
knitr::opts_chunk$set(echo = TRUE)
library('ggpubr')
library('emmeans')
library('plotly')
library('tidyverse')
library("MASS")
library("scales")
library("caret")
library("AppliedPredictiveModeling")
library("ranger")
library("e1071")
library("randomForest")
library("alluvial")
library("matrixStats")
theme_set(theme_pubr())
Scores <- read.csv("nfl_dataset_2002-2019week6.csv", header=TRUE, sep= ",", stringsAsFactors=FALSE)
Scores$Home_win <- factor(Scores$score_home > Scores$score_away, labels=c("Home_loss", "Home_win"))
summary(Scores)
Team_colors <- c("SF"="#AA0000",
"CHI"="#0B162A",
"CIN"="#FB4F14",
"BUF"="#00338D",
"DEN"="#FB4F14",
"CLE"="#FF3C00",
"TB"="#D50A0A",
"ARI"="#97233F",
"LAC"="#0080C6",
"KC"="#E31837",
"IND"="#002C5F",
"DAL"="#041E42",
"MIA"="#008E97",
"PHI"="#004C54",
"ATL"="#A71930",
"NYG"="#0B2265",
"JAX"="#006778",
"NYJ"="#125740",
"DET"="#0076B6",
"GB"="#203731",
"CAR"="#0085CA",
"NE"="#002244",
"LV"="#000000",
"LA"="#003594",
"BAL"="#241773",
"WAS"="#773141",
"NO"="#D3BC8D",
"SEA"="#002244",
"PIT"="#FFB612",
"HOU"="#03202F",
"TEN"="#4B92DB",
"MIN"="#4F2683")
# Function to plot confusion matrix using ggtile plot from a confussion matrix object
# By user: Enrique Perez Herrero
# on https://stackoverflow.com/questions/46063234/how-to-produce-a-confusion-matrix-and-find-the-misclassification-rate-of-the-na%C3%AF
ggplotConfusionMatrix <- function(m){
mytitle <- paste("Accuracy", percent_format()(m$overall[1]),
"Kappa", percent_format()(m$overall[2]))
d <- as.data.frame.matrix(m$table)
drn <- colnames(d)
drr <- rownames(d)
drs <- rowSums(d)
d <- d %>% mutate_if(is.numeric, funs(./drs))
d <- d %>% gather(x, value)
Y <- cbind(as.data.frame(m$table), Proportion = d$value)
Y$Reference <- fct_rev(Y$Reference) # Added this line to get a downward diagonal
p <-
ggplot(data = Y, aes(x = Reference, y = Prediction, fill= Proportion)) +
geom_tile( colour = "white") +
scale_fill_gradient(low = "white", high = "#14A02E", na.value = "white", limits=c(0,1)) +
ggtitle(mytitle) +
theme(legend.position = "right", axis.text.x = element_text(angle = 60, hjust = 1)) +
guides(fill = guide_colorbar(frame.colour = "black", ticks = FALSE))
return(p)
}
MachineLearning_RF_ranger <- function(DF, GROUPING, TREES) {
# 80:20 data split
train_index <- as.data.frame(DF %>% sample_n(round(length(Scores$date) * 0.8)))
train_index <- match(rownames(train_index), rownames(DF))
train_x <- as.data.frame(DF[train_index, ])
test_y <- as.data.frame(DF[-train_index, ])
# Train set, 3705
train_x$Date <- rownames(train_x)
Training_meta.df <- train_x # this might fail here
train_x <- subset(Training_meta.df, select = -c(Home_win, score_home, score_away))
rownames(train_x) <- train_x$Sample
train_x <- subset(train_x, select = -c(Date))
Training_meta.df <- subset(Training_meta.df, select = c(Home_win, score_home, score_away))
rownames(Training_meta.df) <- Training_meta.df$Date
# Test set, 926 samples
test_y$Date <- rownames(test_y)
Testing_meta.df <- test_y
test_y <- subset(Testing_meta.df, select = -c(Home_win, score_home, score_away))
rownames(test_y) <- test_y$Sample
test_y <- subset(test_y, select = -c(Date))
Testing_meta.df <- subset(Testing_meta.df, select = c(Home_win, score_home, score_away))
rownames(Testing_meta.df) <- Testing_meta.df$Date
# Training model
Training_grid <- expand.grid(.mtry = seq(10, length(train_x), round(length(train_x)*0.1)), .splitrule= "gini",
.min.node.size = c(1, 5, 10))
train_control <- trainControl(method="cv", number=10)
RF_CM <- list()
RF_CM[["RF_model"]] <- train(x = train_x, y = Training_meta.df[[GROUPING]], method = "ranger", importance = "permutation",
tuneGrid = Training_grid, trControl = train_control, num.trees = TREES)
RF_prediction_3 <- predict(RF_CM[["RF_model"]], test_y)
RF_CM[["CMatrix"]] <- confusionMatrix(RF_prediction_3, as.factor(Testing_meta.df[[GROUPING]]), mode = "everything")
RF_CM[["CMatrixPLOT"]] <- ggplotConfusionMatrix(RF_CM[["CMatrix"]])
RF_CM[["VarImporance"]] <- varImp(RF_CM[["RF_model"]])
return(RF_CM)
}
Home_win_pred <- MachineLearning_RF_ranger(Scores, "Home_win", 500)
# It seems the model is really keying in on the number of running attempts
# My best guess is when teams are ahead they run the ball to kill the clock
# maybe this causes inflated run attempt totals
varImp(Home_win_pred$RF_model)
plot(Home_win_pred[["VarImporance"]])
# Thankfully the model is fairly accurate.
# 86% overall accuracy and 0.8376 F1
Home_win_pred$CMatrixPLOT
# Testing out some new plot types
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv')
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
ggarrange(a,b, common.legend = TRUE)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 0.9)) + geom_boxplot(outlier.shape = NA, alpha = 0.8)
ggplot(Scores, aes(x = Home_win, y = turnovers_away, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.8))
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_home, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.8))
anova(lm(passing_yards_home ~ Home_win, data = Scores))
ggplot(Scores, aes(x = Home_win, y = passing_yards_home, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.8))
ggplot(Scores, aes(x = Home_win, y = rushing_yards_home, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.8))
# How often do you win if you rush for 100 yards
summary(Scores[Scores$rushing_yards_home > 100,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 100,]$Home_win)) * 100
# How often do you win if you rush for 150 yards
summary(Scores[Scores$rushing_yards_home > 150,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 150,]$Home_win)) * 100
# How often do you win if you rush for 200 yards
summary(Scores[Scores$rushing_yards_home > 200,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 200,]$Home_win)) * 100
# How often do you win if you rush for 250 yards
summary(Scores[Scores$rushing_yards_home > 250,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 250,]$Home_win)) * 100
# How often do you win if you rush for 300 yards
summary(Scores[Scores$rushing_yards_home > 300,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 300,]$Home_win)) * 100
ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home)) + geom_smooth() + geom_point(aes(color = Home_win), alpha = 0.8)
ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away)) + geom_smooth() + geom_point(aes(color = Home_win), alpha = 0.8)
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci")
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv')
e
e
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv')
e
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_discrete(values=c("#2ECC71", "#E74C3C"))
# Testing out some new plot types
Win_loss_palette <- c("#2ECC71", "#E74C3C")
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_discrete(values= Win_loss_palette)
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + scale_fill_discrete(values= Win_loss_palette) +  ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) +ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + ggdist::scale_point_fill_discrete(values = Win_loss_palette)
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) +ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
a
# Testing out some new plot types
Win_loss_palette <- c( "#E74C3C","#2ECC71")
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) +ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL)
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv')
e
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) +ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette)
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv', legend = 'right')
e
max(Scores$rushing_yards_home)
max(Scores$passing_yards_home)
max(Scores$rushing_yards_away)
max(Scores$passing_yards_away)
# ggdist
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,400)
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,550)
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,400)
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,550)
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv', legend = 'right')
min(Scores$passing_yards_away)
e
ggsave("Rushing-passing_yards_vs_wins.png", e, height = 12, width = 12)
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25)
ggarrange(a,b, common.legend = TRUE)
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
ggarrange(a,b, common.legend = TRUE)
# ggdist passing and rushing yards
a <- ggplot(Scores,aes(x=rushing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,400)
b <- ggplot(Scores,aes(x=passing_yards_home, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,550)
c <- ggplot(Scores,aes(x=rushing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,400)
d <- ggplot(Scores,aes(x=passing_yards_away, y = Home_win, fill=Home_win)) + ggdist::stat_dotsinterval(quantiles = 300, point_interval = "mode_hdci") + ylab(NULL) + scale_fill_manual(values = Win_loss_palette) + xlim(0,550)
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv', legend = 'right')
e <- ggarrange(a,b,c,d, nrow = 2, ncol = 2, common.legend = TRUE, align = 'hv', legend = 'right')
ggsave("Rushing-passing_yards_vs_wins.png", e, height = 12, width = 12)
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
c <- ggplot(Scores,aes(x=rushing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
d <- ggplot(Scores,aes(x=passing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
ggarrange(a,b,c,d, common.legend = TRUE)
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = NULL, axis.text.y = NULL, axis.ticks.y = NULL)
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = NULL, axis.text.y = NULL, axis.ticks.y = NULL)
c <- ggplot(Scores,aes(x=rushing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = NULL, axis.text.y = NULL, axis.ticks.y = NULL)
d <- ggplot(Scores,aes(x=passing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = NULL, axis.text.y = NULL, axis.ticks.y = NULL)
ggarrange(a,b,c,d, common.legend = TRUE)
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = NULL, axis.text.y = NULL, axis.ticks.y = NULL)
a
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
a
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
+ theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette)
+ theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
c <- ggplot(Scores,aes(x=rushing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
d <- ggplot(Scores,aes(x=passing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
ggarrange(a,b,c,d, common.legend = TRUE)
ggarrange(a,b,c,d, common.legend = TRUE, align = 'hv', legend = 'right')
# Density plots
a <- ggplot(Scores,aes(x=rushing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
b <- ggplot(Scores,aes(x=passing_yards_home, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
c <- ggplot(Scores,aes(x=rushing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
d <- ggplot(Scores,aes(x=passing_yards_away, fill=Home_win)) + geom_density(alpha=0.25) + scale_fill_manual(values = Win_loss_palette) + theme(axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
e <- ggarrange(a,b,c,d, common.legend = TRUE, align = 'hv', legend = 'right')
ggsave("Rushing-passing_yards_vs_wins_density_plot.png", e, height = 12, width = 12)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 0.9)) + geom_boxplot(outlier.shape = NA, alpha = 0.8)
# Rushing attempts tending to be a strong predictor of the outcome of the game.
# Are you more successful with more rushing attempts?
# i.e., is the a positve corrlation between attempts and rushing yards.
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 0.9)) + geom_boxplot(outlier.shape = NA, alpha = 0.8)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 0.9)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 0.9)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1.5)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
# Rushing attempts tending to be a strong predictor of the outcome of the game.
# Are you more successful with more rushing attempts?
# i.e., is the a positve corrlation between attempts and rushing yards.
a <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_home, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b
# Rushing attempts tending to be a strong predictor of the outcome of the game.
# Are you more successful with more rushing attempts?
# i.e., is the a positve corrlation between attempts and rushing yards.
a <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_home, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, fill = Home_win)) + geom_smooth(method = "lm") + + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, fill = Home_win)) + geom_smooth(method = "lm") + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
c <- ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
d <- ggplot(Scores, aes(x = rushing_attempts_away, y = rushing_yards_away, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
# Rushing attempts tending to be a strong predictor of the outcome of the game.
# Are you more successful with more rushing attempts?
# i.e., is the a positve corrlation between attempts and rushing yards.
a <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_home, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = Home_win, y = rushing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
c<- ggarrange(a,b, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
c<- ggarrange(a,b, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
d <- ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
d <- ggplot(Scores, aes(x = rushing_attempts_home, y = rushing_yards_home, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
e <- ggplot(Scores, aes(x = rushing_attempts_away, y = rushing_yards_away, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
f <- ggarrange(c,d,e, nrow = 2, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
f <- ggarrange(d,e, nrow = 2, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
f <- ggarrange(c,d,e, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 2)
f
f <- ggarrange(d,e, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
ggarrange(c,f, nrow = 2)
ggsave("Rushing_attempts_vs_wins_plus_correlation_yards_and_attempts.png", g, height = 12, width = 12)
g <- ggarrange(c,f, nrow = 2)
ggsave("Rushing_attempts_vs_wins_plus_correlation_yards_and_attempts.png", g, height = 12, width = 12)
# Passing attempts vs wins and yards
a <- ggplot(Scores, aes(x = Home_win, y = passing_attempts_home, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = Home_win, y = passing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
c<- ggarrange(a,b, common.legend = TRUE, align = 'hv', legend = 'right', nrow = 1)
d <- ggplot(Scores, aes(x = passing_attempts_home, y = passing_yards_home, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
# Passing attempts vs wins and yards
a <- ggplot(Scores, aes(x = Home_win, y = passing_attempts_home, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
a
b <- ggplot(Scores, aes(x = Home_win, y = passing_attempts_away, fill = Home_win)) + geom_point(position = position_jitterdodge(jitter.width = 1)) + geom_boxplot(outlier.shape = NA, alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
b
View(Scores)
ggplot(Scores, aes(x = Home_win, y = turnovers_away, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.8))
ggplot(Scores, aes(x = Home_win, y = turnovers_away, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 1)) + scale_color_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = Home_win, y = turnovers_away, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 1)) + scale_fill_manual(values = Win_loss_palette)
# Turnovers and their correlation with wins
ggplot(Scores, aes(x = Home_win, y = turnovers_away, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
# Turnovers and their correlation with wins
ggplot(Scores, aes(x = score_away, y = turnovers_away, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = turnovers_away, y = Home_win, fill = Home_win)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 1)) + scale_fill_manual(values = Win_loss_palette)
# Turnovers and their correlation with wins
ggplot(Scores, aes(x = turnovers_away, y = Home_win, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
# Turnovers and their correlation with wins
ggplot(Scores, aes(x = turnovers_away, y = score_away, color = Home_win)) + geom_smooth(method = "lm") + scale_color_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = turnovers_away, y = score_away)) + geom_smooth(method = "lm")
ggplot(Scores, aes(x = turnovers_away, y = score_home)) + geom_smooth(method = "lm")
ggplot(Scores, aes(x = turnovers_away, y = score_home)) + geom_smooth(method = "lm") + xlab("Positive Turnovers")
ggplot(Scores, aes(x = turnovers_away, y = score_home, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
# Turnovers and their correlation with score and time of possession
a <- ggplot(Scores, aes(x = turnovers_away, y = score_home, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = turnovers_home, y = score_away, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
ggarrange(a,b)
anova(lm(passing_yards_home ~ Home_win, data = Scores))
ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home)) + geom_smooth() + geom_point(aes(color = Home_win), alpha = 0.8)
# How often do you win if you rush for 100 yards
summary(Scores[Scores$rushing_yards_home > 100,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 100,]$Home_win)) * 100
# How often do you win if you rush for 150 yards
summary(Scores[Scores$rushing_yards_home > 150,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 150,]$Home_win)) * 100
# How often do you win if you rush for 200 yards
summary(Scores[Scores$rushing_yards_home > 200,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 200,]$Home_win)) * 100
# How often do you win if you rush for 250 yards
summary(Scores[Scores$rushing_yards_home > 250,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 250,]$Home_win)) * 100
# How often do you win if you rush for 300 yards
summary(Scores[Scores$rushing_yards_home > 300,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 300,]$Home_win)) * 100
Scores$possession_home
a <- ggplot(Scores, aes(x = turnovers_away, y = possession_home, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
a
summary(Scores$possession_home)
sapply(strsplit(Scores$possession_home,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
Scores$possession_home
#https://stackoverflow.com/questions/5186972/how-to-convert-time-mmss-to-decimal-form-in-r
Scores$possession_home <- sapply(strsplit(Scores$possession_home,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
ggplot(Scores, aes(x = turnovers_away, y = possession_home, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
Scores$possession_away <- sapply(strsplit(Scores$possession_home,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
Scores$possession_away <- sapply(strsplit(Scores$possession_away,":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
ggplot(Scores, aes(x = turnovers_away, y = possession_home, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = turnovers_home, y = possession_away, color = Home_win)) + geom_smooth(method = "lm") + xlab("Positive Turnovers") + scale_color_manual(values = Win_loss_palette)
# Turnovers and their correlation with score and time of possession
a <- ggplot(Scores, aes(x = turnovers_away, y = score_home, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = turnovers_home, y = score_away, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
c <- ggarrange(a,b)
# Turnovers and their correlation with score and time of possession
a <- ggplot(Scores, aes(x = turnovers_away, y = score_home, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = turnovers_home, y = score_away, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
c <- ggplot(Scores, aes(x = turnovers_away, y = possession_home, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
d <- ggplot(Scores, aes(x = turnovers_home, y = possession_away, color = Home_win)) + geom_smooth(method = "lm")+ scale_color_manual(values = Win_loss_palette)
ggarrange(a,b,d,c, common.legend = TRUE, legend = 'right', nrow = 2, ncol = 2)
e <- ggarrange(a,b,d,c, common.legend = TRUE, legend = 'right', nrow = 2, ncol = 2)
ggsave("Correlations_turnovers_with_score_timeofpossession.png", e, height = 12, width = 12)
# Cool plots passing vs rushing yards
ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home)) + geom_smooth() + geom_point(aes(color = Home_win), alpha = 0.8)
# Cool plots passing vs rushing yards
ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, fill = Home_win))+ geom_point(alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, fill = Home_win))+ geom_point(alpha = 0.8) + scale_fill_manual(values = Win_loss_palette)
# Cool plots passing vs rushing yards
ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
ggarrange(a,b, common.legend = TURE, legend = 'right', nrow = 2)
ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2)
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
b <- ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette)
c <- ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2, align='hv')
ggsave("Passing_vs_rushing_yards.png", c, height = 8, width = 12)
# A bit of odds/stats
# How often do you win if you rush for 100 yards
summary(Scores[Scores$rushing_yards_home > 100,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 100,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 90,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 100,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 90,]$Home_win)
sum(summary(Scores[Scores$rushing_yards_home > 100,]$Home_win))
summary(Scores[Scores$rushing_yards_home > 90,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 90,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 50,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 50,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 45,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 45,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 30,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 30,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 25,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 25,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 25,]$Home_win)
summary(Scores[Scores$rushing_yards_home > 10,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home > 10,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 10,]$Home_win)
summary(Scores$Home_win)
summary(Scores[Scores$rushing_yards_home < 10,]$Home_win)
summary(Scores[Scores$rushing_yards_home < 50,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 50,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home > 100,]$Home_win)
summary(Scores[Scores$rushing_yards_home < 100,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 100,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home < 150,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 150,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home < 160,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 160,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_home < 155,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 155,]$Home_win)) * 100
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(x = 155)
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept  = 155)
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed")
a
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed")
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=160, y=500, label= "50th percentile Home wins")
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 200, linetype = "dashed") + annotate("text", x=160, y=500, label= "50th percentile Home wins")
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=200, y=500, label= "50th percentile Home wins")
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=250, y=500, label= "50th percentile Home wins")
a
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=230, y=500, label= "50th percentile Home wins")
a
summary(Scores[Scores$rushing_yards_away < 155,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away < 155,]$Home_win)) * 100
# 50/50 odds
summary(Scores[Scores$rushing_yards_home < 155,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 155,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away < 155,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away < 155,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away < 200,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away < 200,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away < 200,]$Away_win) / sum(summary(Scores[Scores$rushing_yards_away < 200,]$Away_win)) * 100
summary(Scores[Scores$rushing_yards_away < 200,]$Home_loss) / sum(summary(Scores[Scores$rushing_yards_away < 200,]$Home_loss)) * 100
# 50/50 odds
summary(Scores[Scores$rushing_yards_home < 155,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_home < 155,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away < 200,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away < 200,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away < 220,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away < 220,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away > 220,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away > 220,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away > 100,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away > 100,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away > 90,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away > 90,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away > 75,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away > 75,]$Home_win)) * 100
summary(Scores[Scores$rushing_yards_away > 70,]$Home_win) / sum(summary(Scores[Scores$rushing_yards_away > 70,]$Home_win)) * 100
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=230, y=500, label= "50th percentile Home wins")
b <- ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 70, linetype = "dashed") + annotate("text", x=230, y=500, label= "50th percentile Home losses")
c <- ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2, align='hv')
ggsave("Passing_vs_rushing_yards.png", c, height = 8, width = 12)
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=230, y=500, label= "50th percentile Home wins")
b <- ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 70, linetype = "dashed") + annotate("text", x=0, y=500, label= "50th percentile Home losses")
c <- ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2, align='hv')
ggsave("Passing_vs_rushing_yards.png", c, height = 8, width = 12)
# Cool plots passing vs rushing yards
a <- ggplot(Scores, aes(x = rushing_yards_home , y = passing_yards_home, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 155, linetype = "dashed") + annotate("text", x=230, y=500, label= "50th percentile Home wins")
b <- ggplot(Scores, aes(x = rushing_yards_away , y = passing_yards_away, color = Home_win))+ geom_point(alpha = 0.8) + scale_color_manual(values = Win_loss_palette) + geom_vline(xintercept = 70, linetype = "dashed") + annotate("text", x=10, y=500, label= "50th percentile Home losses")
c <- ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2, align='hv')
c <- ggarrange(a,b, common.legend = TRUE, legend = 'right', nrow = 2, align='hv')
ggsave("Passing_vs_rushing_yards.png", c, height = 8, width = 12)
